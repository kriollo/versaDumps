name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            arch: amd64
            ext: .exe
          - os: macos-latest
            platform: darwin
            arch: amd64
            ext: ''
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            ext: ''
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: app/go.sum

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/frontend/package-lock.json

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install frontend dependencies
        working-directory: app/frontend
        run: npm install

      - name: Build application
        working-directory: app
        run: |
          wails build -platform ${{ matrix.platform }}/${{ matrix.arch }} -o versaDumps${{ matrix.ext }}

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd app/build/bin
          7z a -tzip ../../../versaDumps-${{ matrix.platform }}-${{ matrix.arch }}.zip versaDumps.exe config.yml
        shell: pwsh

      - name: Create archive (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd app/build/bin
          chmod +x versaDumps
          tar -czf ../../../versaDumps-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz versaDumps config.yml

      - name: Create archive (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd app/build/bin
          chmod +x versaDumps
          tar -czf ../../../versaDumps-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz versaDumps config.yml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: versaDumps-${{ matrix.platform }}-${{ matrix.arch }}
          path: versaDumps-${{ matrix.platform }}-${{ matrix.arch }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "Initial release ðŸŽ‰" >> CHANGELOG.md
          else
            git log ${LAST_TAG}..HEAD --pretty=format:"- %s" >> CHANGELOG.md
          fi
          
          echo "" >> CHANGELOG.md
          echo "## Downloads" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "- **Windows:** versaDumps-windows-amd64.zip" >> CHANGELOG.md
          echo "- **macOS:** versaDumps-darwin-amd64.tar.gz" >> CHANGELOG.md
          echo "- **Linux:** versaDumps-linux-amd64.tar.gz" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## Installation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "1. Download the appropriate file for your operating system" >> CHANGELOG.md
          echo "2. Extract the archive" >> CHANGELOG.md
          echo "3. Run the \`versaDumps\` executable" >> CHANGELOG.md
          echo "4. The application will start on http://localhost:9191" >> CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: VersaDumps ${{ steps.get_version.outputs.VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            versaDumps-windows-amd64/versaDumps-windows-amd64.zip
            versaDumps-darwin-amd64/versaDumps-darwin-amd64.tar.gz
            versaDumps-linux-amd64/versaDumps-linux-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
